version: '3'

services:
  nginx:
    build:
      context: .
      dockerfile: requirements/nginx/Dockerfile
    container_name: nginx
    image: nginx
    depends_on:
      - wordpress
    ports:
      - 443:443
    networks:
      - inception
    volumes:
      # having these two container-volumes is not really useful. could just copy the files for this use case.
      # kept it as a syntax example / reminder of this option
      - ./requirements/nginx/conf/:/etc/nginx/http.d/
      - ./requirements/nginx/tools:/etc/nginx/ssl/
      - wp-volume:/var/www/
    restart: always

  mariadb:
    build:
      context: .
      dockerfile: requirements/mariadb/Dockerfile
      args:
        DB_NAME: ${DB_NAME}
        DB_USER: ${DB_USER}
        DB_PASS: ${DB_PASS}
        DB_ROOT: ${DB_ROOT}
    container_name: mariadb
    image: mariadb
    ports:
      - 3306:3306
    networks:
      - inception
    volumes:
      - db-volume:/var/lib/mysql
    restart: always

  wordpress:
    build:
      context: .
      dockerfile: requirements/wordpress/Dockerfile
      args:
        DB_NAME: ${DB_NAME}
        DB_USER: ${DB_USER}
        DB_PASS: ${DB_PASS}
    container_name: wordpress
    image: wordpress
    depends_on:
      - mariadb
    restart: always
    networks:
      - inception
    volumes:
      - wp-volume:/var/www/

volumes:
  wp-volume:
    name: wp-volume
    driver_opts:
      o: bind
      type: none
      # using a var here because docker compose is not interpreting "~" the way i am expecting it to.
      # and i want to run on mac and linux, so the absolute homepath will be slightly different
      # var is manually stored in .env for now, but would be more elegant to set in makefile and export to env. maybe later
      device: ${HOMEPATH}/wordpress

  db-volume:
    name: db-volume
    driver_opts:
      o: bind
      type: none
      device: ${HOMEPATH}/mariadb

networks:
    inception:
      name: inception
      driver: bridge